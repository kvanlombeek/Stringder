votes_df[i,'dirty_street'],method = 'cosine', q=3)
votes_df[i,'cosine_q_4'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=4)
votes_df[i,'cosine_q_5'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=5)
votes_df[i,'levenshtein'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'lv')
votes_df[i,'q_2_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=2)
votes_df[i,'q_3_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=3)
votes_df[i,'q_4_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=4)
votes_df[i,'q_5_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=5)
votes_df[i,'d_has_point'] <- grepl(pattern = "\\.", votes_df[i,'dirty_street'])
votes_df[i,'k_has_point'] <- grepl(pattern = "\\.", votes_df[i,'kad_street'])
votes_df[i,'d_has_space'] <- grepl(pattern = " ", votes_df[i,'dirty_street'])
votes_df[i,'k_has_space'] <- grepl(pattern = " ", votes_df[i,'kad_street'])
votes_df[i,'d_has_straat'] <- grepl(pattern = "straat", votes_df[i,'dirty_street'])
votes_df[i,'k_has_straat'] <- grepl(pattern = "straat", votes_df[i,'kad_street'])
votes_df[i,'d_has_str'] <- grepl(pattern = "str", votes_df[i,'dirty_street'])
votes_df[i,'d_has_steenweg'] <- grepl(pattern = "steenweg", votes_df[i,'dirty_street'])
votes_df[i,'d_has_stwg'] <- grepl(pattern = "stwg", votes_df[i,'dirty_street'])
votes_df[i,'k_has_steenweg'] <- grepl(pattern = "steenweg", votes_df[i,'kad_street'])
votes_df[i,'d_has_laan'] <- grepl(pattern = "laan", votes_df[i,'dirty_street'])
votes_df[i,'k_has_laan'] <- grepl(pattern = "laan", votes_df[i,'kad_street'])
votes_df[i,'d_has_baan'] <- grepl(pattern = "baan", votes_df[i,'dirty_street'])
votes_df[i,'k_has_baan'] <- grepl(pattern = "baan", votes_df[i,'kad_street'])
votes_df[i,'both_have_space'] <- ifelse( votes_df[i,'d_has_space'] & votes_df[i,'k_has_space'],
TRUE, FALSE)
votes_df[i,'both_have_street'] <- ifelse((votes_df[i,'d_has_straat'] & votes_df[i,'k_has_straat'])|
(votes_df[i,'d_has_str'] & votes_df[i,'k_has_straat']) ,
TRUE, FALSE)
votes_df[i,'both_have_steenweg'] <- ifelse((votes_df[i,'d_has_steenweg'] & votes_df[i,'k_has_steenweg'])|
(votes_df[i,'d_has_stwg'] & votes_df[i,'k_has_steenweg']) ,
TRUE, FALSE)
votes_df[i,'both_have_laan'] <- ifelse((votes_df[i,'d_has_laan'] & votes_df[i,'k_has_laan']) ,
TRUE, FALSE)
votes_df[i,'both_have_k_has_baan'] <- ifelse((votes_df[i,'d_has_baan'] & votes_df[i,'k_has_baan']) ,
TRUE, FALSE)
kad_cleaned <- gsub('steenweg', '', votes_df[i,'kad_street'])
kad_cleaned <- gsub('straat', '', kad_cleaned)
kad_cleaned <- gsub('laan', '', kad_cleaned)
kad_cleaned <- gsub('baan', '', kad_cleaned)
to_vote_cleaned <- gsub('steenweg', '',  votes_df[i,'dirty_street'])
to_vote_cleaned <- gsub('straat', '', to_vote_cleaned)
to_vote_cleaned <- gsub('str', '', to_vote_cleaned)
to_vote_cleaned <- gsub('str.', '', to_vote_cleaned)
to_vote_cleaned <- gsub('laan', '', to_vote_cleaned)
to_vote_cleaned <- gsub('baan', '', to_vote_cleaned)
votes_df[i,'cl_jaccard_q_2'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'jaccard', q=2)
votes_df[i,'cl_jaccard_q_3'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'jaccard', q=3)
votes_df[i,'cl_jaccard_q_4'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'jaccard', q=4)
votes_df[i,'cl_jaccard_q_5'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'jaccard', q=5)
votes_df[i,'cl_cosine_q_2'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'cosine', q=2)
votes_df[i,'cl_cosine_q_3'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'cosine', q=3)
votes_df[i,'cl_cosine_q_4'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'cosine', q=4)
votes_df[i,'cl_cosine_q_5'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'cosine', q=5)
votes_df[i,'cl_levenshtein'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'lv')
votes_df[i,'cl_q_2_gram'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'qgram', q=2)
votes_df[i,'cl_q_3_gram'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'qgram', q=3)
votes_df[i,'cl_q_4_gram'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'qgram', q=4)
votes_df[i,'cl_q_5_gram'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'qgram', q=5)
}
votes_df <- subset(votes_df, jw !=0)
votes_df$length_ratio <- nchar(votes_df$dirty_street)/nchar(votes_df$kad_street)
votes_df$lenght_diff <- nchar(votes_df$dirty_street)-nchar(votes_df$kad_street)
n_words <- function(x){
sapply(gregexpr("[[:alpha:]]+", x), function(x) sum(x > 0))
}
votes_df$n_words_d_street <- sapply(votes_df$dirty_street, n_words)
votes_df$n_words_k_street <- sapply(votes_df$kad_street, n_words)
votes_df$different_n_words <- with(votes_df, ifelse(n_words_d_street == n_words_k_street,
TRUE, FALSE))
votes_df$vote <- NA
votes_df$pair_index <- paste0('pair_',seq(1:nrow(votes_df)))
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
dbWriteTable(conn = conn, name = 'votes',value =  votes_df, overwrite = TRUE)
dbDisconnect(conn)
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
temp <- votes_df
temp$rf_prediction <- NA
temp <- temp[,c('pair_index','rf_prediction')]
dbWriteTable(conn = conn, name = 'rf_predictions',value =  temp, overwrite = TRUE)
dbDisconnect(conn)
i <- 1484
print(i)
votes_df[i,'dirty_street']
# Feature creation
for(i in 1:nrow(votes_df)){
print(i)
kad_street$street_str_dist <- stringdist(kad_street[,c('Name')],
votes_df[i,'dirty_street'],method = 'jw')
#1 op 5 slechte match geven, opdat het algoritme ook op slechte matches traint
if(runif(n = 1)>0.8){
votes_df[i,'kad_street'] <- kad_street$Name[order(kad_street$street_str_dist)[2]]
}else{
votes_df[i,'kad_street'] <- kad_street[which.min(kad_street$street_str_dist), 'Name']
}
votes_df[i,'jw'] <- min(kad_street$street_str_dist)
votes_df[i,'jaccard_q_2'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=2)
votes_df[i,'jaccard_q_3'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=3)
votes_df[i,'jaccard_q_4'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=4)
votes_df[i,'jaccard_q_5'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=5)
votes_df[i,'cosine_q_2'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=2)
votes_df[i,'cosine_q_3'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=3)
votes_df[i,'cosine_q_4'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=4)
votes_df[i,'cosine_q_5'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=5)
votes_df[i,'levenshtein'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'lv')
votes_df[i,'q_2_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=2)
votes_df[i,'q_3_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=3)
votes_df[i,'q_4_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=4)
votes_df[i,'q_5_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=5)
votes_df[i,'d_has_point'] <- grepl(pattern = "\\.", votes_df[i,'dirty_street'])
votes_df[i,'k_has_point'] <- grepl(pattern = "\\.", votes_df[i,'kad_street'])
votes_df[i,'d_has_space'] <- grepl(pattern = " ", votes_df[i,'dirty_street'])
votes_df[i,'k_has_space'] <- grepl(pattern = " ", votes_df[i,'kad_street'])
votes_df[i,'d_has_straat'] <- grepl(pattern = "straat", votes_df[i,'dirty_street'])
votes_df[i,'k_has_straat'] <- grepl(pattern = "straat", votes_df[i,'kad_street'])
votes_df[i,'d_has_str'] <- grepl(pattern = "str", votes_df[i,'dirty_street'])
votes_df[i,'d_has_steenweg'] <- grepl(pattern = "steenweg", votes_df[i,'dirty_street'])
votes_df[i,'d_has_stwg'] <- grepl(pattern = "stwg", votes_df[i,'dirty_street'])
votes_df[i,'k_has_steenweg'] <- grepl(pattern = "steenweg", votes_df[i,'kad_street'])
votes_df[i,'d_has_laan'] <- grepl(pattern = "laan", votes_df[i,'dirty_street'])
votes_df[i,'k_has_laan'] <- grepl(pattern = "laan", votes_df[i,'kad_street'])
votes_df[i,'d_has_baan'] <- grepl(pattern = "baan", votes_df[i,'dirty_street'])
votes_df[i,'k_has_baan'] <- grepl(pattern = "baan", votes_df[i,'kad_street'])
votes_df[i,'both_have_space'] <- ifelse( votes_df[i,'d_has_space'] & votes_df[i,'k_has_space'],
TRUE, FALSE)
votes_df[i,'both_have_street'] <- ifelse((votes_df[i,'d_has_straat'] & votes_df[i,'k_has_straat'])|
(votes_df[i,'d_has_str'] & votes_df[i,'k_has_straat']) ,
TRUE, FALSE)
votes_df[i,'both_have_steenweg'] <- ifelse((votes_df[i,'d_has_steenweg'] & votes_df[i,'k_has_steenweg'])|
(votes_df[i,'d_has_stwg'] & votes_df[i,'k_has_steenweg']) ,
TRUE, FALSE)
votes_df[i,'both_have_laan'] <- ifelse((votes_df[i,'d_has_laan'] & votes_df[i,'k_has_laan']) ,
TRUE, FALSE)
votes_df[i,'both_have_k_has_baan'] <- ifelse((votes_df[i,'d_has_baan'] & votes_df[i,'k_has_baan']) ,
TRUE, FALSE)
kad_cleaned <- gsub('steenweg', '', votes_df[i,'kad_street'])
kad_cleaned <- gsub('straat', '', kad_cleaned)
kad_cleaned <- gsub('laan', '', kad_cleaned)
kad_cleaned <- gsub('baan', '', kad_cleaned)
to_vote_cleaned <- gsub('steenweg', '',  votes_df[i,'dirty_street'])
to_vote_cleaned <- gsub('straat', '', to_vote_cleaned)
to_vote_cleaned <- gsub('str', '', to_vote_cleaned)
to_vote_cleaned <- gsub('str.', '', to_vote_cleaned)
to_vote_cleaned <- gsub('laan', '', to_vote_cleaned)
to_vote_cleaned <- gsub('baan', '', to_vote_cleaned)
votes_df[i,'cl_jaccard_q_2'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'jaccard', q=2)
votes_df[i,'cl_jaccard_q_3'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'jaccard', q=3)
votes_df[i,'cl_jaccard_q_4'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'jaccard', q=4)
votes_df[i,'cl_jaccard_q_5'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'jaccard', q=5)
votes_df[i,'cl_cosine_q_2'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'cosine', q=2)
votes_df[i,'cl_cosine_q_3'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'cosine', q=3)
votes_df[i,'cl_cosine_q_4'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'cosine', q=4)
votes_df[i,'cl_cosine_q_5'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'cosine', q=5)
votes_df[i,'cl_levenshtein'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'lv')
votes_df[i,'cl_q_2_gram'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'qgram', q=2)
votes_df[i,'cl_q_3_gram'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'qgram', q=3)
votes_df[i,'cl_q_4_gram'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'qgram', q=4)
votes_df[i,'cl_q_5_gram'] <- stringdist(kad_cleaned,
to_vote_cleaned,method = 'qgram', q=5)
}
votes_df <- subset(votes_df, jw !=0)
votes_df$length_ratio <- nchar(votes_df$dirty_street)/nchar(votes_df$kad_street)
votes_df$lenght_diff <- nchar(votes_df$dirty_street)-nchar(votes_df$kad_street)
n_words <- function(x){
sapply(gregexpr("[[:alpha:]]+", x), function(x) sum(x > 0))
}
votes_df$n_words_d_street <- sapply(votes_df$dirty_street, n_words)
votes_df$n_words_k_street <- sapply(votes_df$kad_street, n_words)
votes_df$different_n_words <- with(votes_df, ifelse(n_words_d_street == n_words_k_street,
TRUE, FALSE))
votes_df$vote <- NA
votes_df$pair_index <- paste0('pair_',seq(1:nrow(votes_df)))
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
dbWriteTable(conn = conn, name = 'votes',value =  votes_df, overwrite = TRUE)
dbDisconnect(conn)
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
temp <- votes_df
temp$rf_prediction <- NA
temp <- temp[,c('pair_index','rf_prediction')]
dbWriteTable(conn = conn, name = 'rf_predictions',value =  temp, overwrite = TRUE)
dbDisconnect(conn)
votes_df <- subset(votes_df, nchar(kad_street)>5)
votes_df$vote <- NA
votes_df$pair_index <- paste0('pair_',seq(1:nrow(votes_df)))
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
dbWriteTable(conn = conn, name = 'votes',value =  votes_df, overwrite = TRUE)
dbDisconnect(conn)
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
temp <- votes_df
temp$rf_prediction <- NA
temp <- temp[,c('pair_index','rf_prediction')]
dbWriteTable(conn = conn, name = 'rf_predictions',value =  temp, overwrite = TRUE)
dbDisconnect(conn)
votes_df$cl_jaccard_q_5 == 'Inf'
for(i in 1:nrow(votes_df)){
print(i)
kad_street$street_str_dist <- stringdist(kad_street[,c('Name')],
votes_df[i,'dirty_street'],method = 'jw')
#1 op 5 slechte match geven, opdat het algoritme ook op slechte matches traint
if(runif(n = 1)>0.8){
votes_df[i,'kad_street'] <- kad_street$Name[order(kad_street$street_str_dist)[2]]
}else{
votes_df[i,'kad_street'] <- kad_street[which.min(kad_street$street_str_dist), 'Name']
}
votes_df[i,'jw'] <- min(kad_street$street_str_dist)
votes_df[i,'jaccard_q_2'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=2)
votes_df[i,'jaccard_q_3'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=3)
votes_df[i,'jaccard_q_4'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=4)
votes_df[i,'jaccard_q_5'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=5)
votes_df[i,'cosine_q_2'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=2)
votes_df[i,'cosine_q_3'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=3)
votes_df[i,'cosine_q_4'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=4)
votes_df[i,'cosine_q_5'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=5)
votes_df[i,'levenshtein'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'lv')
votes_df[i,'q_2_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=2)
votes_df[i,'q_3_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=3)
votes_df[i,'q_4_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=4)
votes_df[i,'q_5_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=5)
#   votes_df[i,'d_has_point'] <- grepl(pattern = "\\.", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_point'] <- grepl(pattern = "\\.", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_space'] <- grepl(pattern = " ", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_space'] <- grepl(pattern = " ", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_straat'] <- grepl(pattern = "straat", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_straat'] <- grepl(pattern = "straat", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_str'] <- grepl(pattern = "str", votes_df[i,'dirty_street'])
#   votes_df[i,'d_has_steenweg'] <- grepl(pattern = "steenweg", votes_df[i,'dirty_street'])
#   votes_df[i,'d_has_stwg'] <- grepl(pattern = "stwg", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_steenweg'] <- grepl(pattern = "steenweg", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_laan'] <- grepl(pattern = "laan", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_laan'] <- grepl(pattern = "laan", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_baan'] <- grepl(pattern = "baan", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_baan'] <- grepl(pattern = "baan", votes_df[i,'kad_street'])
#   votes_df[i,'both_have_space'] <- ifelse( votes_df[i,'d_has_space'] & votes_df[i,'k_has_space'],
#                                            TRUE, FALSE)
#   votes_df[i,'both_have_street'] <- ifelse((votes_df[i,'d_has_straat'] & votes_df[i,'k_has_straat'])|
#                                             (votes_df[i,'d_has_str'] & votes_df[i,'k_has_straat']) ,
#                                            TRUE, FALSE)
#   votes_df[i,'both_have_steenweg'] <- ifelse((votes_df[i,'d_has_steenweg'] & votes_df[i,'k_has_steenweg'])|
#                                              (votes_df[i,'d_has_stwg'] & votes_df[i,'k_has_steenweg']) ,
#                                            TRUE, FALSE)
#   votes_df[i,'both_have_laan'] <- ifelse((votes_df[i,'d_has_laan'] & votes_df[i,'k_has_laan']) ,
#                                              TRUE, FALSE)
#   votes_df[i,'both_have_k_has_baan'] <- ifelse((votes_df[i,'d_has_baan'] & votes_df[i,'k_has_baan']) ,
#                                          TRUE, FALSE)
#
#   kad_cleaned <- gsub('steenweg', '', votes_df[i,'kad_street'])
#   kad_cleaned <- gsub('straat', '', kad_cleaned)
#   kad_cleaned <- gsub('laan', '', kad_cleaned)
#   kad_cleaned <- gsub('baan', '', kad_cleaned)
#
#   to_vote_cleaned <- gsub('steenweg', '',  votes_df[i,'dirty_street'])
#   to_vote_cleaned <- gsub('straat', '', to_vote_cleaned)
#   to_vote_cleaned <- gsub('str', '', to_vote_cleaned)
#   to_vote_cleaned <- gsub('str.', '', to_vote_cleaned)
#   to_vote_cleaned <- gsub('laan', '', to_vote_cleaned)
#   to_vote_cleaned <- gsub('baan', '', to_vote_cleaned)
#   votes_df[i,'cl_jaccard_q_2'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'jaccard', q=2)
#   votes_df[i,'cl_jaccard_q_3'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'jaccard', q=3)
#   votes_df[i,'cl_jaccard_q_4'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'jaccard', q=4)
#   votes_df[i,'cl_jaccard_q_5'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'jaccard', q=5)
#   votes_df[i,'cl_cosine_q_2'] <- stringdist(kad_cleaned,
#                                          to_vote_cleaned,method = 'cosine', q=2)
#   votes_df[i,'cl_cosine_q_3'] <- stringdist(kad_cleaned,
#                                          to_vote_cleaned,method = 'cosine', q=3)
#   votes_df[i,'cl_cosine_q_4'] <- stringdist(kad_cleaned,
#                                          to_vote_cleaned,method = 'cosine', q=4)
#   votes_df[i,'cl_cosine_q_5'] <- stringdist(kad_cleaned,
#                                          to_vote_cleaned,method = 'cosine', q=5)
#
#   votes_df[i,'cl_levenshtein'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'lv')
#   votes_df[i,'cl_q_2_gram'] <- stringdist(kad_cleaned,
#                                        to_vote_cleaned,method = 'qgram', q=2)
#   votes_df[i,'cl_q_3_gram'] <- stringdist(kad_cleaned,
#                                        to_vote_cleaned,method = 'qgram', q=3)
#   votes_df[i,'cl_q_4_gram'] <- stringdist(kad_cleaned,
#                                        to_vote_cleaned,method = 'qgram', q=4)
#   votes_df[i,'cl_q_5_gram'] <- stringdist(kad_cleaned,
#                                        to_vote_cleaned,method = 'qgram', q=5)
}
votes_df <- subset(votes_df, jw !=0)
votes_df$length_ratio <- nchar(votes_df$dirty_street)/nchar(votes_df$kad_street)
votes_df$lenght_diff <- nchar(votes_df$dirty_street)-nchar(votes_df$kad_street)
n_words <- function(x){
sapply(gregexpr("[[:alpha:]]+", x), function(x) sum(x > 0))
}
votes_df$n_words_d_street <- sapply(votes_df$dirty_street, n_words)
votes_df$n_words_k_street <- sapply(votes_df$kad_street, n_words)
votes_df$different_n_words <- with(votes_df, ifelse(n_words_d_street == n_words_k_street,
TRUE, FALSE))
votes_df <- subset(votes_df, nchar(kad_street)>5)
votes_df$vote <- NA
votes_df$pair_index <- paste0('pair_',seq(1:nrow(votes_df)))
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
dbWriteTable(conn = conn, name = 'votes',value =  votes_df, overwrite = TRUE)
dbDisconnect(conn)
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
temp <- votes_df
temp$rf_prediction <- NA
temp <- temp[,c('pair_index','rf_prediction')]
dbWriteTable(conn = conn, name = 'rf_predictions',value =  temp, overwrite = TRUE)
dbDisconnect(conn)
votes_df <- data.frame(dirty_street = dirty_streets[ran_sel, 'Name'], stringsAsFactors = FALSE)
votes_df <- subset(votes_df, !is.na(dirty_street))
votes_df <- subset(votes_df, dirty_street != '?')
votes_df <- subset(votes_df, nchar(dirty_street) > 5)
# Feature creation
for(i in 1:nrow(votes_df)){
print(i)
kad_street$street_str_dist <- stringdist(kad_street[,c('Name')],
votes_df[i,'dirty_street'],method = 'jw')
#1 op 5 slechte match geven, opdat het algoritme ook op slechte matches traint
if(runif(n = 1)>0.8){
votes_df[i,'kad_street'] <- kad_street$Name[order(kad_street$street_str_dist)[2]]
}else{
votes_df[i,'kad_street'] <- kad_street[which.min(kad_street$street_str_dist), 'Name']
}
votes_df[i,'jw'] <- min(kad_street$street_str_dist)
votes_df[i,'jaccard_q_2'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=2)
votes_df[i,'jaccard_q_3'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=3)
votes_df[i,'jaccard_q_4'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=4)
votes_df[i,'jaccard_q_5'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'jaccard', q=5)
votes_df[i,'cosine_q_2'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=2)
votes_df[i,'cosine_q_3'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=3)
votes_df[i,'cosine_q_4'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=4)
votes_df[i,'cosine_q_5'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'cosine', q=5)
votes_df[i,'levenshtein'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'lv')
votes_df[i,'q_2_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=2)
votes_df[i,'q_3_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=3)
votes_df[i,'q_4_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=4)
votes_df[i,'q_5_gram'] <- stringdist(votes_df[i,'kad_street'],
votes_df[i,'dirty_street'],method = 'qgram', q=5)
#   votes_df[i,'d_has_point'] <- grepl(pattern = "\\.", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_point'] <- grepl(pattern = "\\.", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_space'] <- grepl(pattern = " ", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_space'] <- grepl(pattern = " ", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_straat'] <- grepl(pattern = "straat", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_straat'] <- grepl(pattern = "straat", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_str'] <- grepl(pattern = "str", votes_df[i,'dirty_street'])
#   votes_df[i,'d_has_steenweg'] <- grepl(pattern = "steenweg", votes_df[i,'dirty_street'])
#   votes_df[i,'d_has_stwg'] <- grepl(pattern = "stwg", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_steenweg'] <- grepl(pattern = "steenweg", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_laan'] <- grepl(pattern = "laan", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_laan'] <- grepl(pattern = "laan", votes_df[i,'kad_street'])
#   votes_df[i,'d_has_baan'] <- grepl(pattern = "baan", votes_df[i,'dirty_street'])
#   votes_df[i,'k_has_baan'] <- grepl(pattern = "baan", votes_df[i,'kad_street'])
#   votes_df[i,'both_have_space'] <- ifelse( votes_df[i,'d_has_space'] & votes_df[i,'k_has_space'],
#                                            TRUE, FALSE)
#   votes_df[i,'both_have_street'] <- ifelse((votes_df[i,'d_has_straat'] & votes_df[i,'k_has_straat'])|
#                                             (votes_df[i,'d_has_str'] & votes_df[i,'k_has_straat']) ,
#                                            TRUE, FALSE)
#   votes_df[i,'both_have_steenweg'] <- ifelse((votes_df[i,'d_has_steenweg'] & votes_df[i,'k_has_steenweg'])|
#                                              (votes_df[i,'d_has_stwg'] & votes_df[i,'k_has_steenweg']) ,
#                                            TRUE, FALSE)
#   votes_df[i,'both_have_laan'] <- ifelse((votes_df[i,'d_has_laan'] & votes_df[i,'k_has_laan']) ,
#                                              TRUE, FALSE)
#   votes_df[i,'both_have_k_has_baan'] <- ifelse((votes_df[i,'d_has_baan'] & votes_df[i,'k_has_baan']) ,
#                                          TRUE, FALSE)
#
#   kad_cleaned <- gsub('steenweg', '', votes_df[i,'kad_street'])
#   kad_cleaned <- gsub('straat', '', kad_cleaned)
#   kad_cleaned <- gsub('laan', '', kad_cleaned)
#   kad_cleaned <- gsub('baan', '', kad_cleaned)
#
#   to_vote_cleaned <- gsub('steenweg', '',  votes_df[i,'dirty_street'])
#   to_vote_cleaned <- gsub('straat', '', to_vote_cleaned)
#   to_vote_cleaned <- gsub('str', '', to_vote_cleaned)
#   to_vote_cleaned <- gsub('str.', '', to_vote_cleaned)
#   to_vote_cleaned <- gsub('laan', '', to_vote_cleaned)
#   to_vote_cleaned <- gsub('baan', '', to_vote_cleaned)
#   votes_df[i,'cl_jaccard_q_2'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'jaccard', q=2)
#   votes_df[i,'cl_jaccard_q_3'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'jaccard', q=3)
#   votes_df[i,'cl_jaccard_q_4'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'jaccard', q=4)
#   votes_df[i,'cl_jaccard_q_5'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'jaccard', q=5)
#   votes_df[i,'cl_cosine_q_2'] <- stringdist(kad_cleaned,
#                                          to_vote_cleaned,method = 'cosine', q=2)
#   votes_df[i,'cl_cosine_q_3'] <- stringdist(kad_cleaned,
#                                          to_vote_cleaned,method = 'cosine', q=3)
#   votes_df[i,'cl_cosine_q_4'] <- stringdist(kad_cleaned,
#                                          to_vote_cleaned,method = 'cosine', q=4)
#   votes_df[i,'cl_cosine_q_5'] <- stringdist(kad_cleaned,
#                                          to_vote_cleaned,method = 'cosine', q=5)
#
#   votes_df[i,'cl_levenshtein'] <- stringdist(kad_cleaned,
#                                           to_vote_cleaned,method = 'lv')
#   votes_df[i,'cl_q_2_gram'] <- stringdist(kad_cleaned,
#                                        to_vote_cleaned,method = 'qgram', q=2)
#   votes_df[i,'cl_q_3_gram'] <- stringdist(kad_cleaned,
#                                        to_vote_cleaned,method = 'qgram', q=3)
#   votes_df[i,'cl_q_4_gram'] <- stringdist(kad_cleaned,
#                                        to_vote_cleaned,method = 'qgram', q=4)
#   votes_df[i,'cl_q_5_gram'] <- stringdist(kad_cleaned,
#                                        to_vote_cleaned,method = 'qgram', q=5)
}
votes_df <- subset(votes_df, jw !=0)
votes_df$length_ratio <- nchar(votes_df$dirty_street)/nchar(votes_df$kad_street)
votes_df$lenght_diff <- nchar(votes_df$dirty_street)-nchar(votes_df$kad_street)
n_words <- function(x){
sapply(gregexpr("[[:alpha:]]+", x), function(x) sum(x > 0))
}
votes_df$n_words_d_street <- sapply(votes_df$dirty_street, n_words)
votes_df$n_words_k_street <- sapply(votes_df$kad_street, n_words)
votes_df$different_n_words <- with(votes_df, ifelse(n_words_d_street == n_words_k_street,
TRUE, FALSE))
votes_df <- subset(votes_df, nchar(kad_street)>5)
votes_df$vote <- NA
votes_df$pair_index <- paste0('pair_',seq(1:nrow(votes_df)))
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
dbWriteTable(conn = conn, name = 'votes',value =  votes_df, overwrite = TRUE)
dbDisconnect(conn)
# Write vote in database for webapp
setwd("~/Dropbox/Rockestate/stringder/data")
conn <- dbConnect(drv = SQLite(), 'stringder.sqlite')
temp <- votes_df
temp$rf_prediction <- NA
temp <- temp[,c('pair_index','rf_prediction')]
dbWriteTable(conn = conn, name = 'rf_predictions',value =  temp, overwrite = TRUE)
dbDisconnect(conn)
